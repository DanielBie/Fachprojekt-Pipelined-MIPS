$date
  Mon Jun 28 17:32:56 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module pipeline_register_e $end
$var reg 1 ! clk $end
$var reg 32 " rd1[31:0] $end
$var reg 32 # rd2[31:0] $end
$var reg 5 $ rsd[4:0] $end
$var reg 5 % rtd[4:0] $end
$var reg 5 & rdd[4:0] $end
$var reg 32 ' signextendd[31:0] $end
$var reg 32 ( pcplus4d[31:0] $end
$var reg 1 ) regwrited $end
$var reg 1 * memtoregd $end
$var reg 1 + memwrited $end
$var reg 1 , branchd $end
$var reg 1 - flushe $end
$var reg 3 . alucontrold[2:0] $end
$var reg 1 / alusrcd $end
$var reg 1 0 regdstd $end
$var reg 32 1 srcae[31:0] $end
$var reg 32 2 writedatae[31:0] $end
$var reg 5 3 rse[4:0] $end
$var reg 5 4 rte[4:0] $end
$var reg 5 5 rde[4:0] $end
$var reg 32 6 signimme[31:0] $end
$var reg 32 7 pcplus4e[31:0] $end
$var reg 1 8 regwritee $end
$var reg 1 9 memtorege $end
$var reg 1 : memwritee $end
$var reg 1 ; branche $end
$var reg 3 < alucontrole[2:0] $end
$var reg 1 = alusrce $end
$var reg 1 > regdste $end
$comment mem_32 is not handled $end
$comment mem_5 is not handled $end
$comment mem_3 is not handled $end
$var reg 7 ? mem_1[6:0] $end
$upscope $end
$enddefinitions $end
#0
U!
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU "
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #
bUUUUU $
bUUUUU %
bUUUUU &
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU '
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU (
U)
U*
U+
U,
U-
bUUU .
U/
U0
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2
bUUUUU 3
bUUUUU 4
bUUUUU 5
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 6
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 7
U8
U9
U:
U;
bUUU <
U=
U>
bUUUUUUU ?
